import Config

# Configure your database
config :caddishouse, Caddishouse.Repo,
  username: "postgres",
  password: "postgres",
  hostname: "localhost",
  database: "caddishouse_dev",
  stacktrace: true,
  show_sensitive_data_on_connection_error: true,
  pool_size: 10

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we use it
# with esbuild to bundle .js and .css sources.
config :caddishouse, CaddishouseWeb.Endpoint,
  # Binding to loopback ipv4 address prevents access from other machines.
  # Change to `ip: {0, 0, 0, 0}` to allow access from other machines.
  http: [ip: {127, 0, 0, 1}, port: 3333],
  check_origin: false,
  code_reloader: true,
  debug_errors: true,
  secret_key_base: "OL+NooAVu4thHeofrLQpk1/pj+wno4cyCWrFlZbq3WGbLN70w2x+Qe1RUsCOWx0l",
  watchers: [
    # Start the esbuild watcher by calling Esbuild.install_and_run(:default, args)
    esbuild:
      {Esbuild, :install_and_run,
       [
         :default,
         [
           "--sourcemap=inline",
           "--watch",
           "--external:fs",
           "--external:http",
           "--external:https",
           "--external:url",
           "--external:canvas",
           "--loader:.png=dataurl",
           "--loader:.gif=dataurl"
         ]
       ]},
    esbuild:
      {Esbuild, :install_and_run,
       [
         :pdf_worker,
         [
           "--sourcemap=inline",
           "--watch",
           "--external:fs",
           "--external:http",
           "--external:https",
           "--external:url",
           "--external:canvas",
           "--loader:.png=dataurl",
           "--loader:.gif=dataurl"
         ]
       ]},
    tailwind: {Tailwind, :install_and_run, [:default, ~w(--watch)]}
  ],
  live_reload: [
    patterns: [
      ~r"priv/static/.*(js|css|png|jpeg|jpg|gif|svg)$",
      ~r"priv/gettext/.*(po)$",
      ~r"lib/caddishouse_web/(live|views)/.*(ex)$",
      ~r"lib/caddishouse_web/templates/.*(eex)$",
      ~r"lib/caddishouse_web/live/.*(sface)$"
    ]
  ]

# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# Mix task:
#
#     mix phx.gen.cert
#
# Note that this task requires Erlang/OTP 20 or later.
# Run `mix help phx.gen.cert` for more information.
#
# The `http:` config above can be replaced with:
#
#     https: [
#       port: 4001,
#       cipher_suite: :strong,
#       keyfile: "priv/cert/selfsigned_key.pem",
#       certfile: "priv/cert/selfsigned.pem"
#     ],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Do not include metadata nor timestamps in development logs
config :logger, :console, format: "[$level] $message\n"

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

# Initialize plugs at runtime for faster development compilation
config :phoenix, :plug_init_mode, :runtime

config :git_hooks,
  auto_install: true,
  verbose: true,
  branches: [
    whitelist: ["feature-.*"],
    blacklist: ["main"]
  ],
  hooks: [
    pre_commit: [
      tasks: [
        {:cmd, "mix format --check-formatted"}
      ]
    ],
    pre_push: [
      verbose: false,
      tasks: [
        {:cmd, "mix dialyzer"},
        {:cmd, "mix test --color --exclude not_implemented"},
        {:cmd, "echo 'success!'"}
      ]
    ]
  ]
